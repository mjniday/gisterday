#!/usr/bin/env ruby
require_relative '../lib/gist.rb'

options = {}

opt_parser = OptionParser.new do |opt|
  opt.banner = "Usage: gist [COMMAND] [OPTIONS]"
  opt.separator  ""
  opt.separator  "Commands"
  opt.separator  "     gist <blank>:   create a new gist in text editor"
  opt.separator  "     gist  <file>:   create a new gist using an existing file"
  opt.separator  "     gist   login:   log in to your github account. Saves token to ~/.gisterday"
  opt.separator  "     gist    help:   show the help options"
  opt.separator  ""
  opt.separator  "Options"

  opt.on("-a","create the gist anonymously so that it isn't associated with your GitHub account") do
    options[:anonymous] = true
  end

  opt.on("-d","--description DESCRIPTION","set the gist description") do |description|
    options[:description] = description
  end

  opt.on("-v","--verbose","view full response of the http request") do
    options[:verbose] = true
  end
end

opt_parser.parse!

if Dir.entries(".").include? ARGV[0]
  file = ARGV[0]
  gist = Gisterday::Gist.new(options)
  gist.add_file(file)
  gist.push_gist
else
  case ARGV[0]
    when "login"
      puts "Logging in..."
      puts "What is your username?"
      username = STDIN.gets.chomp
      `stty -echo`
      puts "What is your password?"
      password = STDIN.gets.chomp
      `stty echo`
      authentication = Gisterday::GitHubAuth.new(username,password)
      authentication.begin_authentication
    when "help"
      puts opt_parser
    else
      file = ARGV[0] || "gisterday_file.rb"
      # if `file` gets saved, it will be in the current directory
      system %Q(vim +"put ='# When you save this file, a gist will be created.'" #{file})

      # check if user saved and create gist if so
      if Dir.entries(".").include? file
        gist = Gisterday::Gist.new(options)
        gist.add_file(file)
        gist.push_gist
      end
  end
end

